<div class="bg-light border m-1 col-5" @onclick="(args) => LastSelectedProductUpdated(args, Product.Name)">
    <h4 class="text-secondary">Product - @Product.Id</h4>
    <input type="checkbox" @onchange="FavouriteUpdated" />Add to Favourite<br /> <br />
    Name - @Product.Name <br />
    <p>RF from Parent @FirstFragment @SecondFragment</p>
    Show Properties:
    <input type="checkbox" @bind="Product.IsActive" />

    @if (Product.IsActive)
    {
        @foreach (var prop in Product.ProductProperties)
        {
            <p>@prop.Key - @prop.Value</p>
        }
    }
    <br />
    <_EditDeleteButton IsActive="Product.IsActive"></_EditDeleteButton>

</div>
@code {
    [Parameter]
    public Demo_Products Product { get; set; }

    [Parameter]
    public RenderFragment FirstFragment { get; set; }

    [Parameter]
    public RenderFragment SecondFragment { get; set; }

    [Parameter]
    public EventCallback<bool> OnFavouriteUpdated { get; set; }

    private async Task FavouriteUpdated(Microsoft.AspNetCore.Components.ChangeEventArgs e)
    {
        await OnFavouriteUpdated.InvokeAsync((bool)e.Value);
    }

    [Parameter]
    public EventCallback<string> OnSelectedProductUpdated { get; set; }
    private async Task LastSelectedProductUpdated(MouseEventArgs e, string name)
    {
        await OnSelectedProductUpdated.InvokeAsync(name);
    }



}

